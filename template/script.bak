#!/usr/bin/env bash

# Set up required environment
module use /storage/icds/RISE/ood/sw/modules
module load anaconda
#conda activate /storage/icds/RISE/sw8/protein_design/snakemake_7.32.4

#module load ttyd/1.7.3
#Load modules if requested
#<%- if context.systemsoftware_check == "0" -%>
#module load screen
#module load tmux
#<%- end -%>
export FASTA= <%= context.imput_sequence.to_s %>
#Hostname check
ip=$(python <<EOF
import socket
host_name = socket.gethostname()
print(socket.gethostbyname(host_name))
EOF
)

#<%- if context.session_type == 1 -%>
#export FOLDER='/storage/icds/RISE/sw8/protein_design/ESMFOLD'

#<%- elsif context.session_type == 0 -%>
#export FOLDER='/storage/icds/RISE/sw8/protein_design/ALPHAFOLD'

#<%- else -%>
#echo "Invalid session type. Exiting"

#<%- end -%>
#ruby -e 'ENV["FOLDER"] = "/storage/icds/RISE/sw8/protein_design/ALPHAFOLD"'
#FOLDER='/storage/icds/RISE/sw8/protein_design/ESMFOLD'
#echo $FOLDER
#cd $FOLDER
#echo $(ls /storage/icds/RISE/sw8/protein_design/ALPHAFOLD/)

#echo $FASTA
#<%- if context.session_type == "0" -%>
#module load anaconda
#conda activate /storage/icds/RISE/sw8/protein_design/snakemake_7.32.4
#conda env list
#cd /storage/icds/RISE/sw8/protein_design/ALPHAFOLD/
#srun --export=ALL snakemake --profile profile --jobs 1

#echo "<%= context.input_sequence.gsub /\r\n?/, "\n" %>" > inputsequence.fasta
#srun --export=ALL bash /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh $USER inputsequence.fasta
#srun --export=ALL bash /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh $USER <%- context.input_sequence %>
#srun --export=ALL sh /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh sld5866 MKTVR 

#<%- elsif context.session_type == "1" -%>

#echo "<%= context.input_sequence.gsub /\r\n?/, "\n" %>" > inputsequence.fasta
#srun --export=ALL bash /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh $USER inputsequence.fasta
#srun --export=ALL bash /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh $USER <%- context.input_sequence %>
#srun --export=ALL bash /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh $USER ${input_sequence}
#srun --export=ALL sh /storage/icds/RISE/sw8/protein_design/ESMFOLD/script.sh sld5866 MKTVR 
#echo "Invalid session type. Exiting"
#<%- else -%>
#echo "Invalid session type. Exiting"
#<%- end -%>

#Debug output
#echo "password: ${password}"
#echo "port: ${port}"
#echo "STP: ${STERMINAL_PW}"

#Configure epilogue script for cleanup
#SCREEN_BASENAME=sterminal_${port}
#OUTPUTDIR=${PWD}
#sed -i 's/some_name_variable/'${SCREEN_BASENAME}'/g' $PWD/epi/epilogue.sh
#sed -i 's+output_location+'${OUTPUTDIR}'+g' $PWD/epi/epilogue.sh
#chmod 775 $PWD/epi/epilogue.sh
#chmod o+w ${OUTPUTDIR}
#export OUTPUTDIR

#Write credential file
#echo $USER:${STERMINAL_PW} > credential_file

#Source color template
#source /storage/icds/RISE/ood/dev/ICDS-Roar-OOD-ttyd/color_themes/<%= context.color_theme %> 

#Launch screen using ttdy
#cd $HOME
#<%- if context.session_type == "0" -%>
#srun --export=ALL --task-epilog=/storage/icds/RISE/ood/dev/ICDS-Roar-OOD-ttyd/epilog/epilog_wrapper.sh ttyd -m 1 -F ${OUTPUTDIR}/credential_file -t "theme={'black':'${theme_black}','red':'${theme_red}','green':'${theme_green}','yellow':'${theme_yellow}','blue':'${theme_blue}','purple':'${theme_purple}','cyan':'${theme_cyan}','white':'${theme_white}','brightBlack':'${theme_brightBlack}','brightRed':'${theme_brightRed}','brightGreen':'${theme_brightGreen}','brightYellow':'${theme_brightYellow}','brightBlue':'${theme_brightBlue}','brightPurple':'${theme_brightPurple}','brightCyan':'${theme_brightCyan}','brightWhite':'${theme_brightWhite}','background':'${theme_background}','foreground':'${theme_foreground}','cursorColor':'${theme_cursorColor}','selectionBackground':'${theme_selectionBackground}'}"  --port=${port} screen -T xterm-256color -dRR  ${SCREEN_BASENAME}
#<%- elsif context.session_type == "1" -%>
#srun --export=ALL --task-epilog=/storage/icds/RISE/ood/dev/ICDS-Roar-OOD-ttyd/epilog/epilog_wrapper.sh ttyd -m 1 -F ${OUTPUTDIR}/credential_file -t "theme={'black':'${theme_black}','red':'${theme_red}','green':'${theme_green}','yellow':'${theme_yellow}','blue':'${theme_blue}','purple':'${theme_purple}','cyan':'${theme_cyan}','white':'${theme_white}','brightBlack':'${theme_brightBlack}','brightRed':'${theme_brightRed}','brightGreen':'${theme_brightGreen}','brightYellow':'${theme_brightYellow}','brightBlue':'${theme_brightBlue}','brightPurple':'${theme_brightPurple}','brightCyan':'${theme_brightCyan}','brightWhite':'${theme_brightWhite}','background':'${theme_background}','foreground':'${theme_foreground}','cursorColor':'${theme_cursorColor}','selectionBackground':'${theme_selectionBackground}'}" --port=${port} tmux new-session -A -s ${SCREEN_BASENAME}
#<%- elsif context.session_type == "2" -%>
#srun --export=ALL --task-epilog=/storage/icds/RISE/ood/dev/ICDS-Roar-OOD-ttyd/epilog/epilog_wrapper.sh ttyd -m 1 -F ${OUTPUTDIR}/credential_file -t "theme={'black':'${theme_black}','red':'${theme_red}','green':'${theme_green}','yellow':'${theme_yellow}','blue':'${theme_blue}','purple':'${theme_purple}','cyan':'${theme_cyan}','white':'${theme_white}','brightBlack':'${theme_brightBlack}','brightRed':'${theme_brightRed}','brightGreen':'${theme_brightGreen}','brightYellow':'${theme_brightYellow}','brightBlue':'${theme_brightBlue}','brightPurple':'${theme_brightPurple}','brightCyan':'${theme_brightCyan}','brightWhite':'${theme_brightWhite}','background':'${theme_background}','foreground':'${theme_foreground}','cursorColor':'${theme_cursorColor}','selectionBackground':'${theme_selectionBackground}'}" --port=${port} bash
#<%- else -%>
#echo "Invalid session type. Exiting"
#<%- end -%>
