#!/bin/bash
set -e

echo "Starting AlphaFold workflow at $(date)"

export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

export SESSIONDIR=<%= session.staged_root %>
export WORKINGDIR="<%= context.working_directory %>"

<%- if context.session_type == "AlphaFold 2" -%>
# Existing AlphaFold 2 script
echo "Debug: Session type is AlphaFold 2"

RUN_ID=$(date +"%Y%m%d_%H%M%S")
STATUS_FILE="${WORKINGDIR}/job_status_${RUN_ID}.txt"
echo "running" > "$STATUS_FILE"

echo "Debug: Using status file: $STATUS_FILE"

# Prepare input sequence
INPUT_SEQUENCE="<%= context.protein_sequence.to_s %>"
echo "Debug: About to run alphafold.sh with sequence: $INPUT_SEQUENCE"

# Load the environment
source ${SESSIONDIR}/alphafold_env.sh

# Launch the AlphaFold 2 job
srun --export=ALL bash "${SESSIONDIR}/alphafold.sh" \
    "$INPUT_SEQUENCE" "$USER" "$WORKINGDIR" "<%= context.auto_accounts %>" "$STATUS_FILE" "$RUN_ID" &
ALPHAFOLD_PID=$!

echo "Debug: AlphaFold 2 process launched with PID: $ALPHAFOLD_PID"

# Monitor the job status
trap 'echo "Debug: Script received termination signal"; exit 1' SIGTERM SIGINT
while true; do
    if ! kill -0 $ALPHAFOLD_PID 2>/dev/null; then
        echo "Debug: AlphaFold 2 process $ALPHAFOLD_PID is no longer running"
        sleep 5
        
        if [[ ! -f "$STATUS_FILE" ]]; then
            echo "Debug: Status file not found, waiting..."
            sleep 30
            continue
        fi
        
        STATUS=$(cat "$STATUS_FILE")
        echo "Debug: Final status from file: $STATUS"
        
        case $STATUS in
            "completed")
                echo "AlphaFold 2 job completed successfully"
                exit 0
                ;;
            "failed")
                echo "AlphaFold 2 job failed"
                echo "Debug: Checking for error logs in $WORKINGDIR"
                ls -la $WORKINGDIR
                exit 1
                ;;
            "running")
                echo "Debug: Process ended but status is still running, waiting..."
                sleep 30
                continue
                ;;
            *)
                echo "Debug: Unknown status: $STATUS"
                sleep 30
                continue
                ;;
        esac
    fi
    
    if [[ -f "$STATUS_FILE" ]]; then
        STATUS=$(cat "$STATUS_FILE")
        echo "Debug: Current status: $STATUS at $(date)"
        
        if [[ "$STATUS" == "running" ]]; then
            sleep 60
            continue
        fi
    fi
    
    sleep 60
done

<%- elsif context.session_type == "AlphaFold 3" -%>
echo "Debug: Session type is AlphaFold 3"

RUN_ID=$(date +"%Y%m%d_%H%M%S")
STATUS_FILE="${WORKINGDIR}/job_status_${RUN_ID}.txt"
echo "running" > "$STATUS_FILE"

echo "Debug: Using status file: $STATUS_FILE"
echo "Debug: Working directory: $WORKINGDIR"

# Prepare input for alphafold3.sh
GPU_ACCOUNT="<%= context.auto_accounts %>"
echo "Debug: GPU Account: $GPU_ACCOUNT"

if [ "<%= context.use_fasta_af3 %>" == "1" ]; then
    echo "Debug: use_fasta_af3 is true. Input is in FASTA format."
    INPUT_SEQUENCE="<%= context.protein_sequence.to_s %>"
    JSON_INPUT=""
else
    echo "Debug: use_fasta_af3 is false. Input is in JSON format."
    INPUT_SEQUENCE=""
    JSON_INPUT="<%= context.protein_sequence.to_s %>"
fi

# Launch the AlphaFold 3 job
srun --export=ALL bash "${SESSIONDIR}/alphafold3.sh" \
    "$INPUT_SEQUENCE" "$JSON_INPUT" "$USER" "$WORKINGDIR" "$GPU_ACCOUNT" "$STATUS_FILE" "$RUN_ID" &
ALPHAFOLD_PID=$!

echo "Debug: AlphaFold 3 process launched with PID: $ALPHAFOLD_PID"

# Monitor the job status
trap 'echo "Debug: Script received termination signal"; exit 1' SIGTERM SIGINT
while true; do
    if ! kill -0 $ALPHAFOLD_PID 2>/dev/null; then
        echo "Debug: AlphaFold 3 process $ALPHAFOLD_PID is no longer running"
        sleep 5

        if [[ ! -f "$STATUS_FILE" ]]; then
            echo "Debug: Status file not found, waiting..."
            sleep 30
            continue
        fi

        STATUS=$(cat "$STATUS_FILE")
        echo "Debug: Final status from file: $STATUS"

        case $STATUS in
            "completed")
                echo "AlphaFold 3 job completed successfully"
                exit 0
                ;;
            "failed")
                echo "AlphaFold 3 job failed"
                echo "Debug: Checking for error logs in $WORKINGDIR"
                ls -la $WORKINGDIR
                exit 1
                ;;
            "running")
                echo "Debug: Process ended but status is still running, waiting..."
                sleep 30
                continue
                ;;
            *)
                echo "Debug: Unknown status: $STATUS"
                sleep 30
                continue
                ;;
        esac
    fi

    if [[ -f "$STATUS_FILE" ]]; then
        STATUS=$(cat "$STATUS_FILE")
        echo "Debug: Current status: $STATUS at $(date)"

        if [[ "$STATUS" == "running" ]]; then
            sleep 60
            continue
        fi
    fi

    sleep 60
done

<%- elsif context.session_type == "ESMFold" -%>
echo "running $USER"
source ${SESSIONDIR}/esmfold_env.sh
srun --export=ALL bash "${SESSIONDIR}/esmfold.sh" $USER
<%- else -%>
echo "Invalid session type. Exiting"
<%- end -%>